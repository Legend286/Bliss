### YamlMime:ManagedReference
items:
- uid: Bliss.CSharp.Transformations.Point
  commentId: T:Bliss.CSharp.Transformations.Point
  id: Point
  parent: Bliss.CSharp.Transformations
  children:
  - Bliss.CSharp.Transformations.Point.#ctor(System.Int32,System.Int32)
  - Bliss.CSharp.Transformations.Point.Equals(Bliss.CSharp.Transformations.Point)
  - Bliss.CSharp.Transformations.Point.Equals(System.Object)
  - Bliss.CSharp.Transformations.Point.GetHashCode
  - Bliss.CSharp.Transformations.Point.ToString
  - Bliss.CSharp.Transformations.Point.X
  - Bliss.CSharp.Transformations.Point.Y
  - Bliss.CSharp.Transformations.Point.op_Equality(Bliss.CSharp.Transformations.Point,Bliss.CSharp.Transformations.Point)
  - Bliss.CSharp.Transformations.Point.op_Inequality(Bliss.CSharp.Transformations.Point,Bliss.CSharp.Transformations.Point)
  langs:
  - csharp
  - vb
  name: Point
  nameWithType: Point
  fullName: Bliss.CSharp.Transformations.Point
  type: Struct
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Point.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Point
    path: ../src/Bliss/CSharp/Transformations/Point.cs
    startLine: 2
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  syntax:
    content: 'public struct Point : IEquatable<Point>'
    content.vb: Public Structure Point Implements IEquatable(Of Point)
  implements:
  - System.IEquatable{Bliss.CSharp.Transformations.Point}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Bliss.CSharp.Transformations.Point.X
  commentId: F:Bliss.CSharp.Transformations.Point.X
  id: X
  parent: Bliss.CSharp.Transformations.Point
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Point.X
  fullName: Bliss.CSharp.Transformations.Point.X
  type: Field
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Point.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: X
    path: ../src/Bliss/CSharp/Transformations/Point.cs
    startLine: 8
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: >-
    The X-coordinate of the Point structure.

    Represents the horizontal component in a 2D space.
  example: []
  syntax:
    content: public int X
    return:
      type: System.Int32
    content.vb: Public X As Integer
- uid: Bliss.CSharp.Transformations.Point.Y
  commentId: F:Bliss.CSharp.Transformations.Point.Y
  id: Y
  parent: Bliss.CSharp.Transformations.Point
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Point.Y
  fullName: Bliss.CSharp.Transformations.Point.Y
  type: Field
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Point.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Y
    path: ../src/Bliss/CSharp/Transformations/Point.cs
    startLine: 14
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: >-
    The Y-coordinate of the Point structure.

    Represents the vertical component in a 2D space.
  example: []
  syntax:
    content: public int Y
    return:
      type: System.Int32
    content.vb: Public Y As Integer
- uid: Bliss.CSharp.Transformations.Point.#ctor(System.Int32,System.Int32)
  commentId: M:Bliss.CSharp.Transformations.Point.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: Bliss.CSharp.Transformations.Point
  langs:
  - csharp
  - vb
  name: Point(int, int)
  nameWithType: Point.Point(int, int)
  fullName: Bliss.CSharp.Transformations.Point.Point(int, int)
  type: Constructor
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Point.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: .ctor
    path: ../src/Bliss/CSharp/Transformations/Point.cs
    startLine: 21
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Initializes a new instance of the Point class with the specified X and Y coordinates.
  example: []
  syntax:
    content: public Point(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: The X coordinate of the point.
    - id: y
      type: System.Int32
      description: The Y coordinate of the point.
    content.vb: Public Sub New(x As Integer, y As Integer)
  overload: Bliss.CSharp.Transformations.Point.#ctor*
  nameWithType.vb: Point.New(Integer, Integer)
  fullName.vb: Bliss.CSharp.Transformations.Point.New(Integer, Integer)
  name.vb: New(Integer, Integer)
- uid: Bliss.CSharp.Transformations.Point.op_Equality(Bliss.CSharp.Transformations.Point,Bliss.CSharp.Transformations.Point)
  commentId: M:Bliss.CSharp.Transformations.Point.op_Equality(Bliss.CSharp.Transformations.Point,Bliss.CSharp.Transformations.Point)
  id: op_Equality(Bliss.CSharp.Transformations.Point,Bliss.CSharp.Transformations.Point)
  parent: Bliss.CSharp.Transformations.Point
  langs:
  - csharp
  - vb
  name: operator ==(Point, Point)
  nameWithType: Point.operator ==(Point, Point)
  fullName: Bliss.CSharp.Transformations.Point.operator ==(Bliss.CSharp.Transformations.Point, Bliss.CSharp.Transformations.Point)
  type: Operator
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Point.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: op_Equality
    path: ../src/Bliss/CSharp/Transformations/Point.cs
    startLine: 32
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Determines whether two specified Point instances have the same coordinates.
  example: []
  syntax:
    content: public static bool operator ==(Point left, Point right)
    parameters:
    - id: left
      type: Bliss.CSharp.Transformations.Point
      description: The first Point to compare.
    - id: right
      type: Bliss.CSharp.Transformations.Point
      description: The second Point to compare.
    return:
      type: System.Boolean
      description: true if both Point instances have the same X and Y coordinates; otherwise, false.
    content.vb: Public Shared Operator =(left As Point, right As Point) As Boolean
  overload: Bliss.CSharp.Transformations.Point.op_Equality*
  nameWithType.vb: Point.=(Point, Point)
  fullName.vb: Bliss.CSharp.Transformations.Point.=(Bliss.CSharp.Transformations.Point, Bliss.CSharp.Transformations.Point)
  name.vb: =(Point, Point)
- uid: Bliss.CSharp.Transformations.Point.op_Inequality(Bliss.CSharp.Transformations.Point,Bliss.CSharp.Transformations.Point)
  commentId: M:Bliss.CSharp.Transformations.Point.op_Inequality(Bliss.CSharp.Transformations.Point,Bliss.CSharp.Transformations.Point)
  id: op_Inequality(Bliss.CSharp.Transformations.Point,Bliss.CSharp.Transformations.Point)
  parent: Bliss.CSharp.Transformations.Point
  langs:
  - csharp
  - vb
  name: operator !=(Point, Point)
  nameWithType: Point.operator !=(Point, Point)
  fullName: Bliss.CSharp.Transformations.Point.operator !=(Bliss.CSharp.Transformations.Point, Bliss.CSharp.Transformations.Point)
  type: Operator
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Point.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: op_Inequality
    path: ../src/Bliss/CSharp/Transformations/Point.cs
    startLine: 40
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Determines whether two specified Point instances have different coordinates.
  example: []
  syntax:
    content: public static bool operator !=(Point left, Point right)
    parameters:
    - id: left
      type: Bliss.CSharp.Transformations.Point
      description: The first Point to compare.
    - id: right
      type: Bliss.CSharp.Transformations.Point
      description: The second Point to compare.
    return:
      type: System.Boolean
      description: true if the Point instances do not have the same X and Y coordinates; otherwise, false.
    content.vb: Public Shared Operator <>(left As Point, right As Point) As Boolean
  overload: Bliss.CSharp.Transformations.Point.op_Inequality*
  nameWithType.vb: Point.<>(Point, Point)
  fullName.vb: Bliss.CSharp.Transformations.Point.<>(Bliss.CSharp.Transformations.Point, Bliss.CSharp.Transformations.Point)
  name.vb: <>(Point, Point)
- uid: Bliss.CSharp.Transformations.Point.Equals(Bliss.CSharp.Transformations.Point)
  commentId: M:Bliss.CSharp.Transformations.Point.Equals(Bliss.CSharp.Transformations.Point)
  id: Equals(Bliss.CSharp.Transformations.Point)
  parent: Bliss.CSharp.Transformations.Point
  langs:
  - csharp
  - vb
  name: Equals(Point)
  nameWithType: Point.Equals(Point)
  fullName: Bliss.CSharp.Transformations.Point.Equals(Bliss.CSharp.Transformations.Point)
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Point.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Equals
    path: ../src/Bliss/CSharp/Transformations/Point.cs
    startLine: 47
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Indicates whether this instance and a specified Point object represent the same point.
  example: []
  syntax:
    content: public bool Equals(Point other)
    parameters:
    - id: other
      type: Bliss.CSharp.Transformations.Point
      description: The Point to compare with the current instance.
    return:
      type: System.Boolean
      description: true if the specified Point is equal to the current Point; otherwise, false.
    content.vb: Public Function Equals(other As Point) As Boolean
  overload: Bliss.CSharp.Transformations.Point.Equals*
  implements:
  - System.IEquatable{Bliss.CSharp.Transformations.Point}.Equals(Bliss.CSharp.Transformations.Point)
- uid: Bliss.CSharp.Transformations.Point.Equals(System.Object)
  commentId: M:Bliss.CSharp.Transformations.Point.Equals(System.Object)
  id: Equals(System.Object)
  parent: Bliss.CSharp.Transformations.Point
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Point.Equals(object?)
  fullName: Bliss.CSharp.Transformations.Point.Equals(object?)
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Point.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: Equals
    path: ../src/Bliss/CSharp/Transformations/Point.cs
    startLine: 56
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Determines whether this instance and a specified object represent the same point.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: true if the specified object is a Point and is equal to the current Point; otherwise, false.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Bliss.CSharp.Transformations.Point.Equals*
  nameWithType.vb: Point.Equals(Object)
  fullName.vb: Bliss.CSharp.Transformations.Point.Equals(Object)
  name.vb: Equals(Object)
- uid: Bliss.CSharp.Transformations.Point.GetHashCode
  commentId: M:Bliss.CSharp.Transformations.Point.GetHashCode
  id: GetHashCode
  parent: Bliss.CSharp.Transformations.Point
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Point.GetHashCode()
  fullName: Bliss.CSharp.Transformations.Point.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Point.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: GetHashCode
    path: ../src/Bliss/CSharp/Transformations/Point.cs
    startLine: 64
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Returns the hash code for this Point instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current Point, which is a unique identifier of the instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Bliss.CSharp.Transformations.Point.GetHashCode*
- uid: Bliss.CSharp.Transformations.Point.ToString
  commentId: M:Bliss.CSharp.Transformations.Point.ToString
  id: ToString
  parent: Bliss.CSharp.Transformations.Point
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Point.ToString()
  fullName: Bliss.CSharp.Transformations.Point.ToString()
  type: Method
  source:
    remote:
      path: src/Bliss/CSharp/Transformations/Point.cs
      branch: main
      repo: https://github.com/MrScautHD/Bliss.git
    id: ToString
    path: ../src/Bliss/CSharp/Transformations/Point.cs
    startLine: 72
  assemblies:
  - Bliss
  namespace: Bliss.CSharp.Transformations
  summary: Returns a string that represents the current Point instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that contains the X and Y coordinates of the Point instance.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Bliss.CSharp.Transformations.Point.ToString*
references:
- uid: Bliss.CSharp.Transformations
  commentId: N:Bliss.CSharp.Transformations
  href: Bliss.html
  name: Bliss.CSharp.Transformations
  nameWithType: Bliss.CSharp.Transformations
  fullName: Bliss.CSharp.Transformations
  spec.csharp:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
  - name: .
  - uid: Bliss.CSharp.Transformations
    name: Transformations
    href: Bliss.CSharp.Transformations.html
  spec.vb:
  - uid: Bliss
    name: Bliss
    href: Bliss.html
  - name: .
  - uid: Bliss.CSharp
    name: CSharp
    href: Bliss.CSharp.html
  - name: .
  - uid: Bliss.CSharp.Transformations
    name: Transformations
    href: Bliss.CSharp.Transformations.html
- uid: System.IEquatable{Bliss.CSharp.Transformations.Point}
  commentId: T:System.IEquatable{Bliss.CSharp.Transformations.Point}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Point>
  nameWithType: IEquatable<Point>
  fullName: System.IEquatable<Bliss.CSharp.Transformations.Point>
  nameWithType.vb: IEquatable(Of Point)
  fullName.vb: System.IEquatable(Of Bliss.CSharp.Transformations.Point)
  name.vb: IEquatable(Of Point)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Bliss.CSharp.Transformations.Point
    name: Point
    href: Bliss.CSharp.Transformations.Point.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Bliss.CSharp.Transformations.Point
    name: Point
    href: Bliss.CSharp.Transformations.Point.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Bliss.CSharp.Transformations.Point.#ctor*
  commentId: Overload:Bliss.CSharp.Transformations.Point.#ctor
  href: Bliss.CSharp.Transformations.Point.html#Bliss_CSharp_Transformations_Point__ctor_System_Int32_System_Int32_
  name: Point
  nameWithType: Point.Point
  fullName: Bliss.CSharp.Transformations.Point.Point
  nameWithType.vb: Point.New
  fullName.vb: Bliss.CSharp.Transformations.Point.New
  name.vb: New
- uid: Bliss.CSharp.Transformations.Point.op_Equality*
  commentId: Overload:Bliss.CSharp.Transformations.Point.op_Equality
  href: Bliss.CSharp.Transformations.Point.html#Bliss_CSharp_Transformations_Point_op_Equality_Bliss_CSharp_Transformations_Point_Bliss_CSharp_Transformations_Point_
  name: operator ==
  nameWithType: Point.operator ==
  fullName: Bliss.CSharp.Transformations.Point.operator ==
  nameWithType.vb: Point.=
  fullName.vb: Bliss.CSharp.Transformations.Point.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Bliss.CSharp.Transformations.Point.op_Equality*
    name: ==
    href: Bliss.CSharp.Transformations.Point.html#Bliss_CSharp_Transformations_Point_op_Equality_Bliss_CSharp_Transformations_Point_Bliss_CSharp_Transformations_Point_
- uid: Bliss.CSharp.Transformations.Point
  commentId: T:Bliss.CSharp.Transformations.Point
  parent: Bliss.CSharp.Transformations
  href: Bliss.CSharp.Transformations.Point.html
  name: Point
  nameWithType: Point
  fullName: Bliss.CSharp.Transformations.Point
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Bliss.CSharp.Transformations.Point.op_Inequality*
  commentId: Overload:Bliss.CSharp.Transformations.Point.op_Inequality
  href: Bliss.CSharp.Transformations.Point.html#Bliss_CSharp_Transformations_Point_op_Inequality_Bliss_CSharp_Transformations_Point_Bliss_CSharp_Transformations_Point_
  name: operator !=
  nameWithType: Point.operator !=
  fullName: Bliss.CSharp.Transformations.Point.operator !=
  nameWithType.vb: Point.<>
  fullName.vb: Bliss.CSharp.Transformations.Point.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Bliss.CSharp.Transformations.Point.op_Inequality*
    name: '!='
    href: Bliss.CSharp.Transformations.Point.html#Bliss_CSharp_Transformations_Point_op_Inequality_Bliss_CSharp_Transformations_Point_Bliss_CSharp_Transformations_Point_
- uid: Bliss.CSharp.Transformations.Point.Equals*
  commentId: Overload:Bliss.CSharp.Transformations.Point.Equals
  href: Bliss.CSharp.Transformations.Point.html#Bliss_CSharp_Transformations_Point_Equals_Bliss_CSharp_Transformations_Point_
  name: Equals
  nameWithType: Point.Equals
  fullName: Bliss.CSharp.Transformations.Point.Equals
- uid: System.IEquatable{Bliss.CSharp.Transformations.Point}.Equals(Bliss.CSharp.Transformations.Point)
  commentId: M:System.IEquatable{Bliss.CSharp.Transformations.Point}.Equals(Bliss.CSharp.Transformations.Point)
  parent: System.IEquatable{Bliss.CSharp.Transformations.Point}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Point)
  nameWithType: IEquatable<Point>.Equals(Point)
  fullName: System.IEquatable<Bliss.CSharp.Transformations.Point>.Equals(Bliss.CSharp.Transformations.Point)
  nameWithType.vb: IEquatable(Of Point).Equals(Point)
  fullName.vb: System.IEquatable(Of Bliss.CSharp.Transformations.Point).Equals(Bliss.CSharp.Transformations.Point)
  spec.csharp:
  - uid: System.IEquatable{Bliss.CSharp.Transformations.Point}.Equals(Bliss.CSharp.Transformations.Point)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Bliss.CSharp.Transformations.Point
    name: Point
    href: Bliss.CSharp.Transformations.Point.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Bliss.CSharp.Transformations.Point}.Equals(Bliss.CSharp.Transformations.Point)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Bliss.CSharp.Transformations.Point
    name: Point
    href: Bliss.CSharp.Transformations.Point.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Bliss.CSharp.Transformations.Point.GetHashCode*
  commentId: Overload:Bliss.CSharp.Transformations.Point.GetHashCode
  href: Bliss.CSharp.Transformations.Point.html#Bliss_CSharp_Transformations_Point_GetHashCode
  name: GetHashCode
  nameWithType: Point.GetHashCode
  fullName: Bliss.CSharp.Transformations.Point.GetHashCode
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Bliss.CSharp.Transformations.Point.ToString*
  commentId: Overload:Bliss.CSharp.Transformations.Point.ToString
  href: Bliss.CSharp.Transformations.Point.html#Bliss_CSharp_Transformations_Point_ToString
  name: ToString
  nameWithType: Point.ToString
  fullName: Bliss.CSharp.Transformations.Point.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
